/*
 * parser.c
 *
 *  Created on: 01/11/2012
 *      Author: Ignacio/Hern√°n
 */
#include "pcb.h"

#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include "collections/list.h"


static t_seg_codigo *line_code_create(int32_t nro_linea, char *linea) {
	t_seg_codigo *new = malloc(sizeof(t_seg_codigo));
	new->linea = strdup(linea);
	new->nro_linea = nro_linea;
	return new;
}

static void line_code_destroy(t_seg_codigo *self) {
	free(self->linea);
	free(self);
}

static t_seg_datos *crear_nodo_datos(int32_t valor, char *variable) {
	t_seg_datos *new = malloc(sizeof(t_seg_datos));
	new->variable = strdup(variable);
	new->valor = valor;
	return new;
}

static void destruir_nodo_datos(t_seg_datos *self) {
	free(self->variable);
	free(self);
}

static t_pos_fun *crear_nodo_funcion(int32_t linea, char *funcion) {
	t_pos_fun *new = malloc(sizeof(t_pos_fun));
	new->nomb_fun= strdup(funcion);
	new->linea = linea;
	return new;
}

static void destruir_nodo_funcion(t_pos_fun *self) {
	free(self->nomb_fun);
	free(self);
}

static t_pos_etq *crear_nodo_etiqueta(int32_t linea, char *etiqueta) {
	t_pos_etq *new = malloc(sizeof(t_pos_etq));
	new->nomb_etq= strdup(etiqueta);
	new->linea = linea;
	return new;
}

static void destruir_nodo_etiqueta(t_pos_etq *self) {
	free(self->nomb_etq);
	free(self);
}

char* sub_string(const char* str, size_t begin, size_t len) {
	if (str == 0 || strlen(str) == 0 || strlen(str) < begin
			|| strlen(str) < (begin + len))
		return 0;

	return strndup(str + begin, len);
}

int load_file_to_memory(const char *filename, char **result) {
	int32_t tam_arch = 0;
	FILE *f = fopen(filename, "r");
	if (f == NULL) {
		*result = NULL;
		return EXIT_FAILURE; //error apertura
	}
	fseek(f, 0, SEEK_END);
	tam_arch = ftell(f);
	fseek(f, 0, SEEK_SET);
	*result = (char *) malloc(tam_arch + 1);
	if (tam_arch != fread(*result, sizeof(char), tam_arch, f)) {
		free(*result);
		return EXIT_FAILURE; //error lectura
	}
	fclose(f);
	(*result)[tam_arch] = 0;
	return tam_arch;
}
